/*
 * This file is generated by jOOQ.
*/
package tasker.model.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import tasker.model.jooq.enums.BatchType;
import tasker.model.jooq.tables.Batch;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchRecord extends UpdatableRecordImpl<BatchRecord> implements Record6<String, BatchType, Integer, Integer, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -104451500;

    /**
     * Setter for <code>public.batch.id</code>.
     */
    public BatchRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.batch.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.batch.type</code>.
     */
    public BatchRecord setType(BatchType value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.batch.type</code>.
     */
    public BatchType getType() {
        return (BatchType) get(1);
    }

    /**
     * Setter for <code>public.batch.remain</code>.
     */
    public BatchRecord setRemain(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.batch.remain</code>.
     */
    public Integer getRemain() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.batch.total</code>.
     */
    public BatchRecord setTotal(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.batch.total</code>.
     */
    public Integer getTotal() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.batch.created</code>.
     */
    public BatchRecord setCreated(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.batch.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.batch.modified</code>.
     */
    public BatchRecord setModified(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.batch.modified</code>.
     */
    public LocalDateTime getModified() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, BatchType, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, BatchType, Integer, Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Batch.BATCH.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BatchType> field2() {
        return Batch.BATCH.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Batch.BATCH.REMAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Batch.BATCH.TOTAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field5() {
        return Batch.BATCH.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field6() {
        return Batch.BATCH.MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchType value2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getRemain();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value5() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value6() {
        return getModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchRecord value2(BatchType value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchRecord value3(Integer value) {
        setRemain(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchRecord value4(Integer value) {
        setTotal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchRecord value5(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchRecord value6(LocalDateTime value) {
        setModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BatchRecord values(String value1, BatchType value2, Integer value3, Integer value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BatchRecord
     */
    public BatchRecord() {
        super(Batch.BATCH);
    }

    /**
     * Create a detached, initialised BatchRecord
     */
    public BatchRecord(String id, BatchType type, Integer remain, Integer total, LocalDateTime created, LocalDateTime modified) {
        super(Batch.BATCH);

        set(0, id);
        set(1, type);
        set(2, remain);
        set(3, total);
        set(4, created);
        set(5, modified);
    }
}
